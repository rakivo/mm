; This example is a modificated version of code from here: <https://github.com/tsoding/bm/blob/master/basm/test/cases/pi.basm>
;
; Ï€ = (4/1) - (4/3) + (4/5) - (4/7) + (4/9) - (4/11) + (4/13) - (4/15) ...
; Take 4 and subtract 4 divided by 3. Then add 4 divided by 5.
; Then subtract 4 divided by 7. Continue alternating between adding
; and subtracting fractions with a numerator of 4 and a denominator of each
; subsequent odd number. The more times you do this, the closer you will get to pi.

#N 750000
#SYS_STDOUT 1

; calculate with current denominator
;        (4/n)
; acc + ^
#CALC_DENOMINATOR secop {
    fdiv
    secop
}

_start:
    push 4.0 ; acc (result of first division 4/1)
    push 3.0 ; denominator
    push N   ; counter

loop:
    swap 2 ; swap counter (top of stack) with current acc

    ; calculate next denominator
    push 4.0
    dup 2
    push 2.0
    fadd
    swap 3

    CALC_DENOMINATOR fsub

    push 4.0
    dup 2
    push 2.0
    fadd
    swap 3

    CALC_DENOMINATOR fadd

    ; decrement counter
    swap 2
    dec

    push 0
    cmp
    jne loop

    ; clean the stack and only have pi left
    pop
    pop

    dmp SYS_STDOUT ; print the value
